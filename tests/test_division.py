from locators.calculator_locators import CalculatorLocators
import pytest

'''
    Файл test_division.py содержит проверки для операции деления.
    Проверки разделены на позитивные и негативные.
'''

class TestCalculatorDivision:
    @pytest.mark.parametrize("dividend, divisor, expected_result", [
        ('10', '2', '5.00'),      # Проверка деления положительных целых чисел без остатка
        ('10', '3', '3.33'),      # Проверка деления положительных целых чисел с остатком
        ('-10', '-2', '5.00'),    # Проверка деления отрицательных целых чисел без остатка
        ('-10', '3', '-3.33'),    # Проверка деления отрицательных целых чисел с остатком
        ('0', '5', '0.00'),       # Проверка деления нуля на положительное число
        ('0', '-5', '0.00'),      # Проверка деления нуля на отрицательное число
        ('2147483647', '2', '1073741823.50'),  # Проверка деления большого числа - 1
        ('2147483648', '2', '1073741824.00'),  # Проверка деления большого числа 
        ('2147483649', '2', '1073741824.50'),  # Проверка деления большого числа + 1
        ('5', '0', 'Infinity'),   # Проверка деления положительного числа на ноль
        ('-5', '0', '-Infinity'), # Проверка деления отрицательного числа на ноль
        ('10', '2.5', '4.00'),    # Проверка деления положительного числа на положительную десятичную дробь
        ('10', '-2.5', '-4.00'),  # Проверка деления положительного числа на отрицательную десятичную дробь
        ('-10', '2.5', '-4.00'),  # Проверка деления отрицательного числа на положительную десятичную дробь
        ('-10', '-2.5', '4.00'),  # Проверка деления отрицательного числа на отрицательную десятичную дробь
    ])
    def test_division_positive(self, calculator_page, dividend, divisor, expected_result):
        calculator_page.perform_division(dividend, divisor)
        calculator_page.verify_result(expected_result)

    @pytest.mark.parametrize("dividend, divisor", [
        ('2.5', 'abc'),     # Проверка деления числа на неподходящее значение
        ('2.5', '2.7.8'),   # Проверка деления чисел с неправильным форматом
        ('1,000', '2.50'),  # Проверка деления чисел с неправильным разделителем десятичной части
        ('', ''),           # Проверка деления пустых строк
        ('', '1'),          # Проверка деления пустой строки и числа
        (' ', ' '),         # Проверка деления пробелов
        (' ', '1'),         # Проверка деления пробела и числа
        ('10.50$', '5.25'), # Проверка деления чисел со специальными символами
    ])
    def test_division_with_invalid_input(self, calculator_page, dividend, divisor):
        calculator_page.perform_division(dividend, divisor)
        calculator_page.verify_error_message("Please, fill the input fields correctly")

        calculator_page.perform_division(divisor, dividend)
        calculator_page.verify_error_message("Please, fill the input fields correctly")